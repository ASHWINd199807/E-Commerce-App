src--components--Navbar.js---
   --pages-------Admin.js , Contact.js , Details.js, Home.js , Login.js , Register,js

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Navbar.js
import React from "react";
import { Link } from "react-router-dom";
import { useCookies } from "react-cookie";
import { useNavigate } from "react-router-dom";

export const Navbar = () => {
  const [cookies, setCookies] = useCookies(["access_token"]);
  const navigate = useNavigate();

  const logout = () => {
    setCookies("access_token", "");
    window.localStorage.removeItem("userID");
    navigate("/")
  };

  return (
    <div className="navbar">
      <div>
        {!cookies.access_token ? (
          <Link to="/login" style={{ margin: "40px", color: "red" }}>
                       {/* IMP! */}
          </Link>
        ) : (
          <>
            <Link to="/home" style={{ margin: "40px", color: "red" }}>
              Home
            </Link>
            <Link to="/contact" style={{ margin: "40px", color: "red" }}>
              Contact
            </Link>
            <Link to="/admin" style={{ margin: "40px", color: "red" }}>
              Admin
            </Link>
            <Link to="/details" style={{ margin: "40px", color: "red" }}>
              Details
            </Link>
            <button onClick={logout}>Logout</button>
          </>
        )}
      </div>
    </div>
  );
};

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Admin.js / Contact.js / Home.js / Details.js  
import React from 'react'

const Admin = () => {
  return (
    <div>Admin / Contact etc</div>
  )
}

export default Admin   

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Login.js 
import React,{useState} from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { useCookies } from "react-cookie";

const Login = () => {
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");

  const navigate = useNavigate();

  const [_, setCookies] = useCookies(["access_token"]);

  const handleSubmit = async (event) => {
    event.preventDefault();
    try {
      const result = await axios.post("http://localhost:200/auth/login", {
        email,
        password,
      });
      if (result.data.message == "dosne") {
        alert("User Does Not Exists");
        navigate("/");
      }
      if (result.data.message === "passwr") {
        alert("Password Incorrect !");
      }
      if (result.data.message == "match") {
        setCookies("access_token", result.data.token);
        window.localStorage.setItem("userID", result.data.userID);
        navigate("/home");
      }
    } catch (err) {
      console.error(err);
    }
  };

  return (
    <div>
      <h1>Please Register first</h1>
      <form onSubmit={handleSubmit}>
        {/* e m a i l  */}
        <label style={{ display: "block" }} htmlFor="email">
          E-mail
        </label>
        <input
          type="email"
          id="email"
          value={email}
          onChange={(event) => {
            setEmail(event.target.value);
          }}
        />

        {/* p a s s w o r d */}
        <label style={{ display: "block" }} htmlFor="password">
          Password
        </label>
        <input
          type="password"
          id="password"
          value={password}
          onChange={(event) => {
            setPassword(event.target.value);
          }}
        />

        <button type="submit">Submit !</button>
      </form>
    </div>
  );
};

export default Login;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Register.js
import React, { useState } from "react";
import axios from "axios";
import { useNavigate } from "react-router-dom";
import { useCookies } from "react-cookie";

const Register = () => {
  const [name, setName] = useState("");
  const [sirName, setSirname] = useState("");
  const [password, setPassword] = useState("");
  const [email, setEmail] = useState("");
  const [number, setNumber] = useState("");
  
  const navigate= useNavigate()

  const [_, setCookies]= useCookies(["access_token"])

  const handleSubmit= async(event)=>{
    event.preventDefault()
    try{
        const result = await axios.post("http://localhost:200/auth/",{
            name,
            sirName,
            password,
            email,
            number,
        })
        if (result.data.message=="exists"){
            alert("User Exists")
            navigate("/login")
        }
        if (result.data.message=="dosn"){
            console.log(result.data)
            setCookies("access_token",result.data.token)
            window.localStorage.setItem("userID",result.data.userID)
            navigate("/home")}
        console.log(result.data,"thiss is thoehfds")
    }catch (err){
        console.error(err)
    }
  }
  

  return (
    <div>
      <h1>Please Register first</h1>
      <form onSubmit={handleSubmit}>

        {/* F I R S T   N A M E  */}
        <label style={{ display: "block" }} htmlFor="name">
          First Name
        </label>
        <input
          type="text"
          id="name"
          value={name}
          onChange={(event) => {
            setName(event.target.value);
          }}
        />

        {/* S I R  N A M E */}
        <label style={{ display: "block" }} htmlFor="sirname">
          Last Name
        </label>
        <input
          type="text"
          id="sirname"
          value={sirName}
          onChange={(event) => {
            setSirname(event.target.value);
          }}
        />

        {/* p a s s w o r d */}
        <label style={{ display: "block" }} htmlFor="password">
          Password
        </label>
        <input
          type="password"
          id="password"
          value={password}
          onChange={(event) => {
            setPassword(event.target.value);
          }}
        />


        {/* e m a i l  */}
        <label style={{ display: "block" }} htmlFor="email">
          E-mail
        </label>
        <input
          type="email"
          id="email"
          value={email}
          onChange={(event) => {
            setEmail(event.target.value);
          }}
        />

        {/* n u m b e r  */}
        <label style={{ display: "block" }} htmlFor="number">
          Contact Number
        </label>
        <input
          type="text"
          id="number"
          value={number}
          onChange={(event) => {
            setNumber(event.target.value);
          }}
        />
         <button type="submit">Submit !</button>
      </form>
    </div>
  );
};

export default Register;

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
App.js

import './App.css';
import { BrowserRouter as Router , Routes , Route } from 'react-router-dom';
import { Navbar } from './components/Navbar';
import Home from './pages/Home';
import Details from './pages/Details';
import Register from './pages/Register';
import Login from './pages/Login';
import Contact from './pages/Contact';
import Admin from './pages/Admin';

function App() {
  return (
    <div className="App">
      <Router>
        <Navbar/>
        <Routes>
          <Route path="/" element={<Register/>}/>
          <Route path="/login" element={<Login/>}/>
          <Route path="/home" element={<Home/>}/>
          <Route path="/contact" element={<Contact/>}/>
          <Route path="/admin" element={<Admin/>}/>
          <Route path="/details" element={<Details/>}/>

        </Routes>
      </Router>
    </div>
  );
}

export default App;
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Index.js
import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';


const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

models-users.js
routes-users.js
index.js is also a file
------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
Users.js

import mongoose from "mongoose";

const UserSchema = new mongoose.Schema({
    name:{type:String , required:true },
    sirName:{type:String , required:true },
    email:{type:String , required:true , unique:true},
    password:{type:String , required:true },
    number:{type:String , required:true },
})

export const UserModel = mongoose.model("users" , UserSchema)

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
users.js

// import  express  from "express";
// import { UserModel } from "../models/Users";


// const router=express.Router()

// router.post("/",async(req,res)=>{
//     const {name, sirname, email , password , number}=req.body
//     console.log(req.body)
// })

// export {router as userRouter}

import express from "express"
import  jwt  from "jsonwebtoken"
import bcrypt from "bcrypt"
import { UserModel } from "../models/Users.js" // T a k e   c a r e   o f   .js   i f   " i m p o r t "   u s e d 



const router= express.Router()

router.post("/",async(req,res)=>{
    const {name, sirName, email , password , number} = req.body
    let user =await UserModel.findOne({email})
    // incase the user exists
    if (user){
        return res.json({message:"exists"})
    }
    
    //if user not in DB

    const hashedPassword= await bcrypt.hash(password,10)
 
    user= await UserModel.create({
       name,
       sirName,
       email,
       password:hashedPassword,
       number
    })

    const token= jwt.sign({_id:user._id},"skljfnkjdsf")

    res.json({message:"dosn",token , userID:user._id })    

    // console.log(req.body)
    // res.status(200).json({message:"Data Sent"})
    

    // if (user){
    //     return res.status(200).json({message:"User already exists"})
    // }
    
      


});

router.post("/login",async(req,res)=>{
    const {email , password } = req.body
    let user =await UserModel.findOne({email})
    // incase the user exists
    if (!user){
        return res.json({message:"dosne"})
    }
    const isMatch = await bcrypt.compare(password,user.password)

    if (!isMatch){
        return res.json({message:"passwr"})
    }

    const token= jwt.sign({_id:user._id},"skljfnkjdsf")

    res.json({message:"match",token , userID:user._id })    

  
      


});

export {router as userRouter}


// import express from "express";
// import jwt from "jsonwebtoken"
// import bcrypt from "bcrypt"
// import { UserModel } from "../models/Users.js";

// const router =express.Router()

// router.post("/register",async(req,res)=>{
//     const {username , password} = req.body
//     const user = await UserModel.findOne({username}) // username:username

//     if (user){
//       return res.json({message:"User already exists."})
//     }
//     const hashedPassword = await bcrypt.hash(password , 10)
//     const newUser = new UserModel({username , password:hashedPassword})// ( { username : username , password : "hashedPassword" } )
//     await newUser.save() // saving the changes   

//     res.json({message:"User Registered Successfully!"})
// })

// router.post("/login",async (req,res)=>{                                                                                                                                                                                                                                                                                       // after login the user needs to send the token to prove that they re the original users who sent request
//     const {username , password} = req.body
//     const user = await UserModel.findOne({username})

//     if(!user){
//         return res.json({message:"User Dosen't Exist"})
//     }

//     const isPasswordValid = await bcrypt.compare(password , user.password)
    
//     if (!isPasswordValid){
//         return res.json({message:"Username or Password is Incorrect"})
//     }

//     const token = jwt.sign({id:user._id}, "secret") // id of the user , with "secret" key
//     res.json( { token , userID : user._id } )
// })    

// export {router as userRouter}

// export const verifyToken = (req,res,next) =>{
//     const token = req.headers.authorization
//     if (token){
//         jwt.verify(token,"secret",(err)=>{
//             if (err) return res.sendStatus(403)
//             next()
//         })
//     } else {
//         res.sendStatus(401)
//     }
// }

------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------
index.js


 
import express from "express";
import path from "path";
import mongoose from "mongoose";
import cors from "cors"

import { userRouter } from "./routes/users.js";

const app=express()

app.use(express.json())
app.use(cors())
 
app.use("/auth",userRouter)

mongoose.connect("mongodb://127.0.0.1:27017",{
    dbName:"fullapp99"
}).then ( () => { console.log( "Database Connected !" ) } ).catch( ( e ) => { console.log(e) } )                    // PROMISE RETURN KAREGA

 

app.listen(200, () => {console.log("SERVER STARTER");});
 
   
    
   

